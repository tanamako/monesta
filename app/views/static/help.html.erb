<% provide(:title, 'Help') %>
<h1>開発備忘録</h1>
<p>
開発備忘録として付けているので何の価値もありませんが晒してしまいます。
</p>

<p>会社に期末に提出するように頑張ります</p>

<div class="main">
	<%= image_tag("0.jpg") %>
	<span>鈴木ちなみかわいい</span>
	<a href="https://www.google.co.jp/search?q=%E9%88%B4%E6%9C%A8%E3%81%A1%E3%81%AA%E3%81%BF&espv=2&source=lnms&tbm=isch&sa=X&ei=kcqaU7H2Nc778QW2kYGYAg&ved=0CAYQ_AUoAQ&biw=1375&bih=758&dpr=0.9#imgdii=_">コレ見ると幸せになれる</a>
</div>

<section>
	<h2>開発wiki用</h2>
	<p><a href="http://railstutorial.jp/chapters/filling-in-the-layout?version=4.0#sec-sass_and_the_asset_pipeline">テストコードリファクタリング用</a></p>
</section>

<section>
	<h2>userモデル作成</h2>
	<p><a href="http://railstutorial.jp/chapters/modeling-users?version=4.0#top">モデル作成</a></p>
</section>


<section>
	<h2>ユーザー表示</h2>
	<p><a href="http://railstutorial.jp/chapters/sign-up?version=4.0#top">ユーザーの表示と作成諸々</a></p>
	<p>チュートリアルに間違いがあるっぽい。<br>
		user.rbというmodelに	<code>attr_accessor :email, :name, :password, :password_confirmation</code><br>
		追加してないとattributesがないというエラーが起こる</p>

	<h3>user登録確認してもだめ</h3>
	<code>User Load (0.3ms)  SELECT "users".* FROM "users"
 => #<ActiveRecord::Relation [#<User id: 1, name: nil, email: nil, created_at: "2014-06-13 09:15:02", updated_at: "2014-06-13 09:15:02", password_digest: nil>, #<User id: 2, name: nil, email: nil, created_at: "2014-06-13 09:16:08", updated_at: "2014-06-13 09:16:08", password_digest: nil>, #<User id: 3, name: nil, email: nil, created_at: "2014-06-13 09:18:37", updated_at: "2014-06-13 09:18:37", password_digest: nil>, #<User id: 4, name: nil, email: nil, created_at: "2014-06-13 09:47:17", updated_at: "2014-06-13 09:47:17", password_digest: nil>, #<User id: 5, name: nil, email: nil, created_at: "2014-06-13 10:05:27", updated_at: "2014-06-13 10:05:27", password_digest: nil>, #<User id: 6, name: nil, email: nil, created_at: "2014-06-16 02:41:28", updated_at: "2014-06-16 02:41:28", password_digest: nil>, #<User id: 7, name: nil, email: nil, created_at: "2014-06-16 02:41:41", updated_at: "2014-06-16 02:41:41", password_digest: nil>, #<User id: 8, name: nil, email: nil, created_at: "2014-06-16 02:51:39", updated_at: "2014-06-16 02:51:39", password_digest: nil>]> 
2.0.0-p353 :006 ></code>	


<h3>デバック用</h3>
<p><a href="http://localhost:3000/users/1">ユーザー</a></p>
<h4>試してみたこと</h4>
<p></p>
<ul>
	<li>User.update_attributes</li>
	<li>User.new -> user.save</li>
	<li>User.create</li>
	<li>Confirmを指定していないのにvalidate通る</li>
	<li>attr_accessorを消したら保存されない<br>
		<code>
			ActiveRecord::UnknownAttributeError in UsersController#create  unknown attribute: password <br>
	  def create
	    @user = User.new(user_params)
	    if @user.save
	      flash[:success] = "Monesta"
	      redirect_to @user
		</code>
	</li>
	<li>validateを修正したら解決した。 <span class="red">user.rbの確認が必要</span></li>
	<li>データベースにattributesがなかったのでpassword, confirmを追加</li>
</ul>


</section>

<section>
	<h2>ログイン</h2>
	<p><a href="https://www.google.co.jp/search?q=gem+device&oq=gem+device&aqs=chrome..69i57.663j0j1&sourceid=chrome&es_sm=91&ie=UTF-8#q=gem+devise&spell=1">devise</a></p>
	<h2>アクティブアド民 管理画面</h2>
	<h2>データベース</h2>
		<p>RDS Amazon</p>

# Connect twitter, facebook
gem 'omniauth'
gem 'omniauth-twitter'
gem 'omniauth-facebook'
gem 'twitter'

group :development, :development_mitaka do
  gem 'pry'
  gem 'pry-doc'
  gem 'pry-rails'
  gem 'better_errors'
  gem 'binding_of_caller'
  gem 'source2swagger'
end

</section>

<section>
	<h2>||=　はrubyの代入演算子</h2>
	<p>
Rubyでは、「変数の値がnilなら変数に代入するが、nilでなければ代入しない (変数の値を変えない)」という操作が非常によく使われます。4.2.3で説明したor演算子||を使用すれば、以下のように書くことができます。

  >> @user <br>
  => nil <br>
  >> @user = @user || "the user"<br>
  => "the user"<br>
  >> @user = @user || "another user"<br>
  => "the user"		<br>
	</p>
</section>

<section>
	<h2>authenticateでsign inがとまる</h2>
	<p><code>user = User.find_by(email: params[:session][:email].downcase)</code></p>
	
<p>
	class AddRememberTokenToUsers < ActiveRecord::Migration <br>
	  def change<br>
	    add_column :users, :remember_token, :string<br>
	    add_index  :users, :remember_token<br>
	  end<br>
	end

</p>

</section>





<section>
	<h2>レイアウト調整のために使った</h2>
	<p><a href="http://stackoverflow.com/questions/3757491/can-i-get-the-name-of-the-current-controller-in-the-view">コントローラーの名前取得してbodyにclass付与しています</a></p>
</section>